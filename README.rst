============
docker_base
============
Docker base container for *JEDI*.

The main responsibility of this repository is to set up a Docker image file
that includes these basic components:

- An ubuntu 18.04 operating system
- GNU compiler suite (currently version 7.4)
- An MPI library

The main development container currently uses openmpi but other
options such as `mpich` and `mvapich` can also be easily accommodated.

In addition to these essential components, there are package installs
of a number of other tools, including

- wget, curl
- git, git-flow, git-lfs 
- cmake, autoconfig
- vim, emacs, nedit
- doxygen, latex
- python, python3 (numpy, scipy, yaml)
- debuggers: kdbg, valgrind
- etc..

How to build the docker_base image
----------------------------------

This repository makes use of `NVIDIA's HPC Container Maker <https://github.com/NVIDIA/hpc-container-maker>_ so, if you want to make changes, **do not edit the Dockerfile directly**.  The Dockerfile is automatically generated by running the `hpccm.py` python script from this repository

.. highlight:: bash
.. code:: bash

  > rm Dockerfile
  > <path>/hpc-container-maker/hpccm.py --recipe base.py --format docker > Dockerfile

.. highlight:: bash
.. code:: bash

  > docker image build -t jcsda/docker_base .
  > docker push jcsda/docker_base


Check out the docker base imgae
-------------------------------
.. code:: bash

  > docker pull jcsda/docker_base

Running the container
-----------------------

To execute a single (in this case, graphical) command in the docker container, you can do, e.g.

.. code:: bash
	  
  > docker run -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY jcsda/docker_base kdbg

To "enter" the docker container (as root), you can run a shell, e.g.

.. code:: bash
	  
  > docker run --rm -it jcsda/docker_base bash
